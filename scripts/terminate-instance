#!/usr/bin/env python
#
# Terminate a given instance
#

import argparse
import boto.ec2
import boto.ec2.autoscale
import boto.utils
import sys

_metadata_object = False
def get_metadata():
    global _metadata_object
    if _metadata_object is False:
        _metadata_object = boto.utils.get_instance_metadata()
    return _metadata_object

def warn(message):
    sys.stderr.write("Warning: " + message + "\n")

parser = argparse.ArgumentParser(description='Terminates a given instance')

parser.add_argument('--ec2', action='store_true',
        help='Terminate regular EC2 instance')
parser.add_argument('--asg', action='store_true',
        help='Terminate instance that is part of Auto Scaling Group')
parser.add_argument('--no-asg-decrement-capacity', dest='asg_decrement_capacity', action='store_false', default=None,
        help='When terminating an instance in ASG this options specifies whether the capacity needs to be decremented')
parser.add_argument('--asg-decrement-capacity', dest='asg_decrement_capacity', action='store_true', default=None,
        help='When terminating an instance in ASG this options specifies whether the capacity needs to be decremented. This is the default.')
parser.add_argument('--region',
        help='AWS region')
parser.add_argument('instance_id',
        help='An instance id to be terminated or "self" if this current instance is to be terminated')

config = parser.parse_args()

if config.ec2 == config.asg:
    parser.error('Either --asg or --ec2 argument needs to be specified')

if config.instance_id == 'self':
    if config.region:
        warn('Region should not be explicitly specified when terminating "self"')
    metadata = get_metadata()
    if not metadata:
        parser.error('Failed to fetch instance metadata')
    config.instance_id = get_metadata()['instance-id']
    config.region = get_metadata()['placement']['availability-zone'][:-1]
else:
    if not config.region:
        parser.error('The region cannot be determined for the given instance')

if config.asg:
    if config.asg_decrement_capacity is None:
        config.asg_decrement_capacity = True
else:
    if config.asg_decrement_capacity is not None:
        warn('Invalid option for EC2: can only decrement capacity for instances in ASG')

if config.asg:
    autoscale = boto.ec2.autoscale.connect_to_region(config.region)
    if not autoscale:
        parser.error('Cannot connect to the specified region')
    autoscale.terminate_instance(config.instance_id, config.asg_decrement_capacity)
else:
    ec2 = boto.ec2.connect_to_region(config.region)
    if not ec2:
        parser.error('Cannot connect to the specified region')
    ec2.terminate_instances([config.instance_id])
